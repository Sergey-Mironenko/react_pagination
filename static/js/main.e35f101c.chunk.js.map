{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","itemsPerPage","currentPage","onPageChange","className","classNames","disabled","href","onClick","Math","ceil","map","item","active","defaultProps","items","App","useState","setPerPage","setCurrentPage","slice","length","id","value","onChange","event","target","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"gMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,aAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAcA,OACE,qCACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAAUJ,EAAc,IAAjE,SACE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EAAc,EAAI,OAAS,QAC1CM,QArBO,kBACfN,GAAe,GACbC,EAAaD,EAAc,IAcvB,oBAUDV,EAAW,EAAGiB,KAAKC,KAAKX,EAAQC,IAAUW,KAAI,SAAAC,GAAI,OACjD,oBACER,UACEC,IAAW,YAAa,CAAEQ,OAAQX,IAAgBU,IAFtD,SAME,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAI,WAAMK,GACVJ,QAAS,kBAAML,EAAaS,IAJ9B,SAMGA,KAREA,MAaT,oBAAIR,UAAWC,IACb,YAAa,CACXC,SAAUJ,EAAeO,KAAKC,KAAKX,EAAQC,GAAW,IAF1D,SAME,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBACEL,EAAeO,KAAKC,KAAKX,EAAQC,GAAW,EAAK,OAAS,QAE5DQ,QAnDQ,kBAChBN,GAAgBO,KAAKC,KAAKX,EAAQC,GAAW,GAC3CG,EAAaD,EAAc,IA0CvB,uBAaJ,6BACGD,EAAaU,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAoBA,aAO9Bd,EAAWgB,aAAe,CAAEZ,YAAa,GCtFzC,IACMa,EAAQvB,EAAW,EADX,IAEXmB,KAAI,SAAAf,GAAC,qBAAYA,MAEPoB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOjB,EAAP,KAAgBkB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOf,EAAP,KAAoBiB,EAApB,KACMlB,EAAe,YAAIc,GAAOK,MAC7BpB,EAAUE,EAAeF,EAAUA,EAAUE,GAMhD,OACE,sBAAKE,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWF,EADX,mBACiCD,EAAa,GAAGmB,MAAM,GADvD,cAC+DnB,EAAaA,EAAaoB,OAAS,GAAGD,MAAM,GAD3G,eACoHL,EAAMA,EAAMM,OAAS,GAAGD,MAAM,GADlJ,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,MAAOvB,EACPwB,SAAU,SAACC,GACTP,GAAYO,EAAMC,OAAOH,OACzBJ,EAAe,IAPnB,UAUE,wBAAQI,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEL,MA/CM,GAgDNC,QAASA,EACTC,aAAcA,EACdC,YAAaA,EACbC,aAzCe,SAACyB,GACpBT,EAAeS,UCbnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e35f101c.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  itemsPerPage: string[],\n  currentPage?: number,\n  onPageChange(page: number): void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  itemsPerPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const moveLeft = () => (\n    currentPage >= 2 && (\n      onPageChange(currentPage - 1)\n    )\n  );\n\n  const moveRight = () => (\n    currentPage <= (Math.ceil(total / perPage) - 1) && (\n      onPageChange(currentPage + 1)\n    )\n  );\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames('page-item', { disabled: currentPage < 2 })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage < 2 ? 'true' : 'false'}\n            onClick={moveLeft}\n          >\n            «\n          </a>\n        </li>\n        {getNumbers(1, Math.ceil(total / perPage)).map(item => (\n          <li\n            className={\n              classNames('page-item', { active: currentPage === item })\n            }\n            key={item}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${item}`}\n              onClick={() => onPageChange(item)}\n            >\n              {item}\n            </a>\n          </li>\n        ))}\n\n        <li className={classNames(\n          'page-item', {\n            disabled: currentPage > (Math.ceil(total / perPage) - 1),\n          },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={\n              currentPage > (Math.ceil(total / perPage) - 1) ? 'true' : 'false'\n            }\n            onClick={moveRight}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {itemsPerPage.map(item => (\n          <li data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nPagination.defaultProps = { currentPage: 1 };\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst total = 42;\nconst items = getNumbers(1, total)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = [...items].slice(\n    (perPage * currentPage) - perPage, (perPage * currentPage),\n  );\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemsPerPage[0].slice(5)} - ${itemsPerPage[itemsPerPage.length - 1].slice(5)} of ${items[items.length - 1].slice(5)})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        itemsPerPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}