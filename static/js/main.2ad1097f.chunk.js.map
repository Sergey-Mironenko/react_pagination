{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","className","classNames","disabled","href","onClick","map","item","active","defaultProps","items","App","useState","setPerPage","setCurrentPage","pageAmount","Math","ceil","length","slice","itemsPerPage","id","value","onChange","event","target","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"gMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAAD,IACzCC,EADyC,EACzCA,MACAC,EAFyC,EAEzCA,QAFyC,IAGzCC,mBAHyC,MAG3B,EAH2B,EAIzCC,EAJyC,EAIzCA,aAJyC,OAMzC,qCACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAAUJ,EAAc,IAAjE,SACE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EAAc,EAAI,OAAS,QAC1CM,QAAS,kBACPN,GAAe,GACbC,EAAaD,EAAc,IAPjC,oBAcDT,EAAW,EAAGO,GAAOS,KAAI,SAAAC,GAAI,OAC5B,oBACEN,UACEC,IAAW,YAAa,CAAEM,OAAQT,IAAgBQ,IAFtD,SAME,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAML,EAAaO,IAJ9B,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IACb,YAAa,CAAEC,SAAUJ,EAAeF,EAAQ,IADlD,SAIE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeL,EAAeF,EAAQ,EAAK,OAAS,QACpDQ,QAAS,kBACPN,GAAgBF,EAAQ,GACtBG,EAAaD,EAAc,IAPjC,uBAeJ,6BACGD,EAAQQ,KAAI,SAAAC,GAAI,OACf,oBAAI,UAAQ,OAAZ,SAAoBA,aAM5BX,EAAWa,aAAe,CAAEV,YAAa,GC1EzC,IAGMW,EAAQpB,EAAW,EAHX,IAIXgB,KAAI,SAAAZ,GAAC,qBAAYA,MAEPiB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOd,EAAP,KAAgBe,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOb,EAAP,KAAoBe,EAApB,KACMC,EAAaC,KAAKC,MAAOP,EAAMA,EAAMQ,OAAS,GAAGC,MAAM,GAAMrB,GAC7DsB,EAAe,YAAIV,GAAOS,MAC7BrB,EAAUC,EAAeD,EAAUA,EAAUC,GAMhD,OACE,sBAAKE,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWF,EADX,mBACiCqB,EAAa,GAAGD,MAAM,GADvD,cAC+DC,EAAaA,EAAaF,OAAS,GAAGC,MAAM,GAD3G,eACoHT,EAAMA,EAAMQ,OAAS,GAAGC,MAAM,GADlJ,OAIA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAOxB,EACPyB,SAAU,SAACC,GACTX,GAAYW,EAAMC,OAAOH,OACzBR,EAAe,IAPnB,UAUE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEJ,MAAOkB,EACPjB,QAASsB,EACTrB,YAAaA,EACbC,aAxCe,SAAC2B,GACpBb,EAAea,UChBnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2ad1097f.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: string[],\n  currentPage?: number,\n  onPageChange(page: number): void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => (\n  <>\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', { disabled: currentPage < 2 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage < 2 ? 'true' : 'false'}\n          onClick={() => (\n            currentPage >= 2 && (\n              onPageChange(currentPage - 1)\n            )\n          )}\n        >\n          «\n        </a>\n      </li>\n      {getNumbers(1, total).map(item => (\n        <li\n          className={\n            classNames('page-item', { active: currentPage === item })\n          }\n          key={item}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${item}`}\n            onClick={() => onPageChange(item)}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames(\n        'page-item', { disabled: currentPage > (total - 1) },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage > (total - 1) ? 'true' : 'false'}\n          onClick={() => (\n            currentPage <= (total - 1) && (\n              onPageChange(currentPage + 1)\n            )\n          )}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n    <ul>\n      {perPage.map(item => (\n        <li data-cy=\"item\">{item}</li>\n      ))}\n    </ul>\n  </>\n);\n\nPagination.defaultProps = { currentPage: 1 };\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst total = 42;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, total)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const pageAmount = Math.ceil(+(items[items.length - 1].slice(5)) / perPage);\n  const itemsPerPage = [...items].slice(\n    (perPage * currentPage) - perPage, (perPage * currentPage),\n  );\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemsPerPage[0].slice(5)} - ${itemsPerPage[itemsPerPage.length - 1].slice(5)} of ${items[items.length - 1].slice(5)})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={pageAmount}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}